{
  "name": "ember",
  "summary": "Ember - JavaScript Application Framework",
  "description": "Ember - JavaScript Application Framework",
  "homepage": "http://github.com/emberjs/ember.js",
  "author": {
    "name": "Charles Jolley"
  },
  "version": "1.0.0-pre.m2",
  "dependencies": {
    "handlebars": "~> 1.0.0-beta.6",
    "window": "git://github.com/charlesjolley/node-window.git#master",
    "jquery": "~> 1.7.0",
    "convoy": "~0.3"
  },
  "main": "./ember.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/charlesjolley/node-ember.git"
  },
  "readme": "# Ember for Node\n\nEmber.js is a framework for building ambitious client-side applications on the\nweb. Now you can use the same Ember tools in node code and in node-based asset\npipelines like [Convoy](http://github.com/charlesjolley/convoy).\n\n# Using This Package\n\nJust add ember as a requirement to your package.json:\n\n```javascript\n\"dependencies\": {\n  ...\n  \"ember\": \"~0.9\"\n}\n```\n\nIn your code, you can load the entire Ember stack by just requiring the package.\nThis will add Ember to the global namespace in your application.\n\n```javascript\nrequire('ember');\n\nMyApp = Ember.Application.create({\n  hi: function() { console.log('Hi! I'm an app!'); }\n});\n```\n\nIf you don't want to use the entire Ember stack, you can just require the \nspecific module that you want. For example, a lot of server side code just \nneeds States for statecharting:\n\n```javascript\nrequire('ember/states');\n\nMyState = Ember.State.create({\n  \n});\n```\n\n# Using Ember with Convoy\n\nBuilding an Ember application in the browser is very easy when using Convoy.\nJust require ember in your main application file.\n\n```javascript\n// In some JS module included by convoy:\nrequire('ember'); // <- convoy will automatically pull in all of Ember.\n\nUserView = Ember.View.extend({\n  template: Ember.Handlebars.compile('{{firstName}} {{lastName}}')\n});\n```\n\nIf you want to store your Handlebars templates in a separate file, Ember for\nNode has a HandlebarsCompiler that will precompile the templates for you. \nHere is an example Convoy pipeline configuration:\n\n```javascript\npipeline = convoy({\n  'app.js': {\n    packager: 'javascript',\n    compilers: {\n      '.hbr': require('ember/packager').HandlebarsCompiler\n    }\n  }\n});\n\napp = express.createServer();\napp.use(pipeline.middleware());\n```\n\nThis will now make `.hbr` files available as modules. In your app code, you\ncan load the template via a normal require:\n\n```javascript\n// user_view.js\n\nrequire('ember/views');\n\nUserView = Ember.View.extend({\n  template: require('./user_template') // template in user_template.hbr\n});\n```\n\nFor a fully functioning example of an application, check out the \n[examples](https://github.com/charlesjolley/node-ember/tree/master/examples) \nfolder.\n",
  "_id": "ember@1.0.0-pre.m2",
  "dist": {
    "shasum": "896484ad280cdfb6f700918bae56395cdc3df8cf",
    "tarball": "http://registry.npmjs.org/ember/-/ember-1.0.0-pre.m2.tgz"
  },
  "_npmVersion": "1.1.59",
  "_npmUser": {
    "name": "charlesjolley",
    "email": "charles@sproutcore.com"
  },
  "maintainers": [
    {
      "name": "charlesjolley",
      "email": "charles@sproutcore.com"
    }
  ],
  "directories": {},
  "_shasum": "896484ad280cdfb6f700918bae56395cdc3df8cf",
  "_resolved": "https://registry.npmjs.org/ember/-/ember-1.0.0-pre.m2.tgz",
  "_from": "ember@1.0.0-pre.m2"
}
